name: Deploy Streamlit App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get AWS Account ID and ECR URL
      id: ecr-info
      run: |
        echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV
        echo "ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV
        echo "FULL_ECR_REPO=${AWS_ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV

    - name: Authenticate Docker with ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

    - name: Build, Tag, and Push Image to ECR
      run: |
        docker build -t streamlit-app .
        docker tag streamlit-app:latest $FULL_ECR_REPO:latest
        docker push $FULL_ECR_REPO:latest

    - name: Deploy to EC2 via SSM
      run: |
        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
          --parameters commands="[
            \"docker stop streamlit-container || true\",
            \"docker rm streamlit-container || true\",
            \"aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY\",
            \"docker pull $FULL_ECR_REPO:latest\",
            \"docker run -d --restart unless-stopped --name streamlit-container -p 8501:8501 $FULL_ECR_REPO:latest\"
          ]" \
          --timeout-seconds 600
